// Generated by CoffeeScript 1.6.2
(function() {
  var RssFeedCliHandler, rssfeed;

  rssfeed = require('./rssfeed-local');

  RssFeedCliHandler = (function() {
    function RssFeedCliHandler() {}

    RssFeedCliHandler.prototype.help = function() {
      return "Commands available:\n" + " *) help - this help\n" + " *) feeds - list of your feeds\n" + " *) feed add 'feed url' - add a feed\n" + " *) login\n";
    };

    RssFeedCliHandler.prototype.feeds = function() {
      var index, result;

      result = "";
      index = 1;
      rssfeed.feeds(function(err, list) {
        var item, _i, _len, _results;

        if (list != null) {
          _results = [];
          for (_i = 0, _len = list.length; _i < _len; _i++) {
            item = list[_i];
            result += "" + index + ") " + item.feed_url + "\n";
            _results.push(index++);
          }
          return _results;
        } else {
          return result = "No feeds";
        }
      });
      return result;
    };

    RssFeedCliHandler.prototype.feed = function(args) {
      var sub_cmd;

      sub_cmd = args.shift();
      if ((sub_cmd != null) && (this[sub_cmd] != null)) {
        return this[sub_cmd](args);
      } else {
        return "Unrecognised 'feed' sub-command: " + sub_cmd;
      }
    };

    RssFeedCliHandler.prototype.add = function(args) {
      return rssfeed.add(args[0], function(err) {
        if (err != null) {
          return "ERROR adding: " + args[0] + ": " + err;
        } else {
          return "added: " + args[0];
        }
      });
    };

    return RssFeedCliHandler;

  })();

  module.exports = new RssFeedCliHandler();

}).call(this);
